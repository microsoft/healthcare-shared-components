parameters:
  pack: 'true'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET 6.x SDK'
  inputs:
    packageType: sdk
    version: 6.x

- task: UseDotNet@2
  displayName: 'Use .NET 7.x SDK'
  inputs:
    packageType: sdk
    version: 7.x

- task: UseDotNet@2
  displayName: 'Use .NET (global.json)'
  inputs:
    useGlobalJson: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build -c $(buildConfiguration)'
  inputs:
    command: build
    arguments: '--configuration $(buildConfiguration) -p:AssemblyVersion="$(assemblySemVer)" -p:FileVersion="$(assemblySemFileVer)" -p:InformationalVersion="$(informationalVersion)" -p:ContinuousIntegrationBuild=true'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: |
      **/*[t|T]ests*/*.csproj
      !**/*.Tests.Integration.csproj
    arguments: '--configuration $(buildConfiguration) -p:ContinuousIntegrationBuild=true --no-build --collect "XPlat Code Coverage" -s "$(build.sourcesDirectory)/CodeCoverage.runsettings" -v normal'

- ${{ if eq(parameters.pack, 'true') }}:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: pack
      configuration: '$(buildConfiguration)'
      packDirectory: '$(build.artifactStagingDirectory)/nupkgs'
      versioningScheme: 'byEnvVar'
      versionEnvVar: 'nuGetVersion'
      nobuild: true
