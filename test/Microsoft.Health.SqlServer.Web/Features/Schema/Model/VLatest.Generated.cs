//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.SqlServer.Web.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class VLatest
    {
        internal readonly static InsertNumbersProcedure InsertNumbers = new InsertNumbersProcedure();
        internal readonly static MyProcedureProcedure MyProcedure = new MyProcedureProcedure();
        internal class InsertNumbersProcedure : StoredProcedure
        {
            internal InsertNumbersProcedure(): base("dbo.InsertNumbers")
            {
            }

            private readonly ComplexNumber1TableValuedParameterDefinition _names = new ComplexNumber1TableValuedParameterDefinition("@names");
            public void PopulateCommand(SqlCommandWrapper command, global::System.Collections.Generic.IEnumerable<ComplexNumber1Row> names)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.InsertNumbers";
                _names.AddParameter(command.Parameters, names);
            }

            public void PopulateCommand(SqlCommandWrapper command, InsertNumbersTableValuedParameters tableValuedParameters)
            {
                PopulateCommand(command, names: tableValuedParameters.Names);
            }
        }

        internal class InsertNumbersTvpGenerator<TInput> : IStoredProcedureTableValuedParametersGenerator<TInput, InsertNumbersTableValuedParameters>
        {
            public InsertNumbersTvpGenerator(ITableValuedParameterRowGenerator<TInput, ComplexNumber1Row> ComplexNumber1RowGenerator)
            {
                this.ComplexNumber1RowGenerator = ComplexNumber1RowGenerator;
            }

            private readonly ITableValuedParameterRowGenerator<TInput, ComplexNumber1Row> ComplexNumber1RowGenerator;
            public InsertNumbersTableValuedParameters Generate(TInput input)
            {
                return new InsertNumbersTableValuedParameters(ComplexNumber1RowGenerator.GenerateRows(input));
            }
        }

        internal struct InsertNumbersTableValuedParameters
        {
            internal InsertNumbersTableValuedParameters(global::System.Collections.Generic.IEnumerable<ComplexNumber1Row> Names)
            {
                this.Names = Names;
            }

            internal global::System.Collections.Generic.IEnumerable<ComplexNumber1Row> Names
            {
                get;
            }
        }

        internal class MyProcedureProcedure : StoredProcedure
        {
            internal MyProcedureProcedure(): base("dbo.MyProcedure_2")
            {
            }

            private readonly NameType1TableValuedParameterDefinition _names = new NameType1TableValuedParameterDefinition("@names");
            public void PopulateCommand(SqlCommandWrapper command, global::System.Collections.Generic.IEnumerable<NameType1Row> names)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.MyProcedure_2";
                _names.AddParameter(command.Parameters, names);
            }

            public void PopulateCommand(SqlCommandWrapper command, MyProcedureTableValuedParameters tableValuedParameters)
            {
                PopulateCommand(command, names: tableValuedParameters.Names);
            }
        }

        internal class MyProcedureTvpGenerator<TInput> : IStoredProcedureTableValuedParametersGenerator<TInput, MyProcedureTableValuedParameters>
        {
            public MyProcedureTvpGenerator(ITableValuedParameterRowGenerator<TInput, NameType1Row> NameType1RowGenerator)
            {
                this.NameType1RowGenerator = NameType1RowGenerator;
            }

            private readonly ITableValuedParameterRowGenerator<TInput, NameType1Row> NameType1RowGenerator;
            public MyProcedureTableValuedParameters Generate(TInput input)
            {
                return new MyProcedureTableValuedParameters(NameType1RowGenerator.GenerateRows(input));
            }
        }

        internal struct MyProcedureTableValuedParameters
        {
            internal MyProcedureTableValuedParameters(global::System.Collections.Generic.IEnumerable<NameType1Row> Names)
            {
                this.Names = Names;
            }

            internal global::System.Collections.Generic.IEnumerable<NameType1Row> Names
            {
                get;
            }
        }
    }
}